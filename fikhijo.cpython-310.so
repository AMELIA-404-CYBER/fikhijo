# Author : Amelia Cyber
# Hayooo mau recode ya
# Izin dulu nnti di kasi source nya beli malahan Ama gw mah
# -------------------------------
_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b''))